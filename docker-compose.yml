version: '3.3'

networks:
  connector:
    driver: bridge

services:
  gs-connector:
    image: gulstream/gs-connector:latest
    command: postgres2kafka
    environment:
      GS_POSTGRES_CONNECTIONURI: postgres://root:root@postgres:5432/postgres?replication=database
      GS_POSTGRES_SLOTNAME: gulfstream
      GS_KAFKA_BROKERS: kafka1:9092
      GS_KAFKA_CLIENTID: gulfstream-connector
      GS_KAFKA_RETRYMAX: 10
      GS_KAFKA_RETRYBACKOFF: 1s
      GS_KAFKA_REQUIREDACKS: local # waitForAll
      GS_KAFKA_MAXMESSAGEBYTES: 15000000
      GS_KAFKA_TIMEOUT: 10s
    depends_on:
      - postgres
      - kafka1
    restart: always
    networks:
      - connector

  zookeeper:
    image: zookeeper:3.4.9
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./tmp/zookeeper/data:/data
      - ./tmp/zookeeper/datalog:/datalog
    restart: on-failure
    networks:
      - connector

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.mutator=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./tmp/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    restart: always
    networks:
      - connector

  postgres:
    hostname: postgres
    image: postgres:13.0
    command: postgres -c config_file=/etc/postgresql.conf
    ports:
      - "5435:5432"
    expose:
      - "5435"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    restart: always
    volumes:
      - ./tmp:/data/postgres
      - ./config/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./config/postgresql.conf:/etc/postgresql.conf
    networks:
      - connector